@page "/"

<section>
    <div class="row">
        <div class="col-8">
            <EditForm Model="Settings">
                <fieldset id="forms__input">
                    <legend>Input fields</legend>
                    <p>
                        <label for="input__name">Text Input</label>
                        <input id="input__name" type="text" placeholder="Text Input" @bind-value="Settings.Name">
                    </p>
                </fieldset>

                <fieldset id="forms__select">
                    <legend>Robot configuration</legend>
                    <p class="grouped">
                        <span>
                            <label for="input__track-width">Track width [mm]</label>
                            <input type="number" id="input__track-width" min="0" max="20" @bind-value="Settings.TrackWidth">
                        </span>

                        <span>
                            <label for="input__wheel-diameter-input">Wheel diameter [mm]</label>
                            <input type="number" id="input__wheel-diameter" min="0" max="5" @bind-value="Settings.WheelDiameter">
                        </span>

                        <span>
                            <label for="input__left-engine">Engines</label>
                            <InputSelect id="input__left-engine" @bind-Value="Settings.LeftEnginePort">
                                <optgroup label="Option Group">
                                    @foreach (var value in Enum.GetValues(typeof(Ports)))
                                    {
                                        <option>@value</option>
                                    }
                                </optgroup>
                            </InputSelect>
                        </span>

                        <span>
                            <label for="input__right-engine">Engines</label>
                            <InputSelect id="input__right-engine" @bind-Value="Settings.RightEnginePort">
                                <optgroup label="Option Group">
                                    @foreach (var value in Enum.GetValues(typeof(Ports)))
                                    {
                                        <option>@value</option>
                                    }
                                </optgroup>
                            </InputSelect>
                        </span>

                    </p>
                </fieldset>

            </EditForm>
        </div>
        <div class="col is-vertical-align is-right">
            <button class="button primary outline" @onclick="GenerateCode">Generate</button>
        </div>
    </div>
</section>

@*<section>
    <div class="row">
        <div class="col-8">
            <EditForm Model="NewAction">
                <fieldset id="forms__input">
                    <legend>Input fields</legend>
                    <p>
                        <label for="input__name">Text Input</label>
                        <input id="input__name" type="text" placeholder="Text Input" @bind-value="Settings.Name">
                    </p>
                </fieldset>

                <fieldset id="forms__select">
                    <legend>Robot configuration</legend>
                    <p class="grouped">
                        <span>
                            <label for="input__track-width">Track width [mm]</label>
                            <input type="number" id="input__track-width" min="0" max="20" @bind-value="Settings.TrackWidth">
                        </span>

                        <span>
                            <label for="input__wheel-diameter-input">Wheel diameter [mm]</label>
                            <input type="number" id="input__wheel-diameter" min="0" max="5" @bind-value="Settings.WheelDiameter">
                        </span>

                        <span>
                            <label for="input__left-engine">Engines</label>
                            <InputSelect id="input__left-engine" @bind-Value="Settings.LeftEnginePort">
                                <optgroup label="Option Group">
                                    @foreach (var value in Enum.GetValues(typeof(Ports)))
                                    {
                                        <option>@value</option>
                                    }
                                </optgroup>
                            </InputSelect>
                        </span>

                        <span>
                            <label for="input__right-engine">Engines</label>
                            <InputSelect id="input__right-engine" @bind-Value="Settings.RightEnginePort">
                                <optgroup label="Option Group">
                                    @foreach (var value in Enum.GetValues(typeof(Ports)))
                                    {
                                        <option>@value</option>
                                    }
                                </optgroup>
                            </InputSelect>
                        </span>

                    </p>
                </fieldset>

            </EditForm>
        </div>
        <div class="col is-vertical-align is-right">
            <button class="button primary outline" @onclick="GenerateCode">Generate</button>
        </div>
    </div>
</section>*@

<section>
    <div class="row is-vertical-align">
        <div class="col">
            <h2>Actions</h2>
        </div>
        <div class="col text-right">
            <p><span class="tag tip-tag is-small">TIP</span>Drag &amp; drop to change order</p>
        </div>
    </div>
    <div class="row">
        <div class="col">
            <TabContainer>
                <Tab Text="Actions">
                    <Dropzone Items="RobotActions" InstantReplace="true">
                        <RobotActionEntry Action="@context" OnRemoveClick="(item) => RobotActions.Remove(item)" />
                    </Dropzone>
                </Tab>

                <Tab Text="Route">
                    <div class="bd-primary is-horizontal-align">
                        <BECanvas Width="400" Height="400" @ref="_canvasReference"></BECanvas>
                    </div>
                </Tab>
            </TabContainer>
        </div>
    </div>
</section>

@code
{
    public List<RobotAction> RobotActions { get; protected set; } = new List<RobotAction> { new RobotAction(), new RobotAction() };
    public CodeSettings Settings { get; protected set; } = new CodeSettings();
    public RobotAction NewAction { get; protected set; } = new RobotAction();

    [Inject] private IMarkdownService Markdown { get; init; } = default!;

    private Canvas2DContext? _context;
    protected Blazor.Extensions.BECanvasComponent? _canvasReference;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        _context = await _canvasReference.CreateCanvas2DAsync();

        await _context.SetFillStyleAsync("#AAA");
        await _context.FillRectAsync(0, 0, 400, 400);

        await _context.SetStrokeStyleAsync("#444");
        await _context.StrokeRectAsync(200, 200, 20, 20);
    }

    protected void GenerateCode()
    {

    }
}
